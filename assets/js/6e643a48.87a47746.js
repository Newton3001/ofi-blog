"use strict";(self.webpackChunkofi_blog_versioned=self.webpackChunkofi_blog_versioned||[]).push([[68170],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),d=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=d(e.components);return a.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),c=d(n),k=r,u=c["".concat(m,".").concat(k)]||c[k]||s[k]||i;return n?a.createElement(u,o(o({ref:t},l),{},{components:n})):a.createElement(u,o({ref:t},l))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6837:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var a=n(83117),r=(n(67294),n(3905));const i={sidebar_custom_props:{id:"eeea4e4a-d18d-45ff-b947-3eb2cfcd6bb8",source:{name:"Gym-Kirchenfeld",ref:"https://gitlab.gymkirchenfeld.ch/teach/ref/-/tree/main/pgzero"}}},o="Aktor",p={unversionedId:"pgzero/actor/index",id:"pgzero/actor/index",title:"Aktor",description:"---",source:"@site/docs/pgzero/3-actor/index.md",sourceDirName:"pgzero/3-actor",slug:"/pgzero/actor/",permalink:"/pgzero/actor/",draft:!1,editUrl:"https://github.com/lebalz/ofi-blog/edit/main/docs/pgzero/3-actor/index.md",tags:[],version:"current",lastUpdatedAt:1674074136,formattedLastUpdatedAt:"18. Jan. 2023",frontMatter:{sidebar_custom_props:{id:"eeea4e4a-d18d-45ff-b947-3eb2cfcd6bb8",source:{name:"Gym-Kirchenfeld",ref:"https://gitlab.gymkirchenfeld.ch/teach/ref/-/tree/main/pgzero"}}},sidebar:"sidebar",previous:{title:"Animation",permalink:"/pgzero/animation/"},next:{title:"Tastatur",permalink:"/pgzero/keyboard/"}},m={},d=[{value:"Grundlegendes",id:"grundlegendes",level:2},{value:"Position",id:"position",level:2},{value:"Kollision",id:"kollision",level:2},{value:"Messung",id:"messung",level:2}],l=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},s=l("Comment"),c=l("Figure"),k={toc:d};function u(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},k,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("h1",{parentName:"div",id:"aktor"},"Aktor"),(0,r.kt)(s,{parentName:"div",type:"heading",nr:0,mdxType:"Comment"})),(0,r.kt)("hr",null),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("h2",{parentName:"div",id:"grundlegendes"},"Grundlegendes"),(0,r.kt)(s,{parentName:"div",type:"heading",nr:1,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo = Actor(bild)\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"erstellt einen neuen Aktor. ",(0,r.kt)("inlineCode",{parentName:"p"},"bild")," ist der Name einer Bilddatei."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:0,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.draw()\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"zeichnet den Aktor ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo")," in das Fenster."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:1,mdxType:"Comment"})),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("h2",{parentName:"div",id:"position"},"Position"),(0,r.kt)(s,{parentName:"div",type:"heading",nr:2,mdxType:"Comment"})),(0,r.kt)("div",{className:"commentable"},(0,r.kt)(c,{parentName:"div",options:{},mdxType:"Figure"},(0,r.kt)("img",{alt:"Positionierung in Pygame Zero",src:n(17748).Z,width:"859",height:"485"}),(0,r.kt)("figcaption",{parentName:"Figure"},(0,r.kt)("span",{parentName:"figcaption",style:{flexGrow:1}}),"Positionierung in Pygame Zero",(0,r.kt)("span",{parentName:"figcaption",style:{flexGrow:1}}))),(0,r.kt)(s,{parentName:"div",type:"figure",nr:0,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.bottom\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"ist die y-Koordinate des unteren Rands von ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo"),"."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:2,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.left\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"ist die x-Koordinate des linken Rands von ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo"),"."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:3,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.right\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"ist die x-Koordinate des rechten Rands von ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo"),"."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:4,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.top\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"ist die y-Koordinate des oberen Rands von ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo"),"."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:5,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.x\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"ist die x-Koordinate des Ankers von ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo"),"."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:6,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.y\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"ist die y-Koordinate des Ankers von ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo"),"."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:7,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.angle\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"ist die Rotation von ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo")," in Grad im Gegenuhrzeigersinn."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:8,mdxType:"Comment"})),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("h2",{parentName:"div",id:"kollision"},"Kollision"),(0,r.kt)(s,{parentName:"div",type:"heading",nr:3,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.collidepoint(x, y)\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"\xfcberpr\xfcft, ob ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo")," mit dem Punkt mit den Koordinaten ",(0,r.kt)("inlineCode",{parentName:"p"},"x"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"y")," kollidiert."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:9,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.collidepoint(pos)\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"\xfcberpr\xfcft, ob ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo")," mit dem Punkt mit den Punkt ",(0,r.kt)("inlineCode",{parentName:"p"},"pos")," kollidiert. So kann beispielsweise \xfcberpr\xfcft werden, ob ein Aktor mit der Maus angeklickt wird:"),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:10,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'def on_mouse_down(pos):\n    if nemo.collidepoint(pos):\n        print("Nemo mit Maus ber\xfchrt.")\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.colliderect(dory)\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"\xfcberpr\xfcft, ob ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo")," mit ",(0,r.kt)("inlineCode",{parentName:"p"},"dory")," kollidiert."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:11,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.collidelist(liste)\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"\xfcberpr\xfcft, ob ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo")," mit einem Aktor in der Liste ",(0,r.kt)("inlineCode",{parentName:"p"},"liste")," kollidiert. In dem Fall wird der Index des kollidierenden Aktors in der Liste zur\xfcckgeliefert. Wenn kein Aktor der Liste mit ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo")," kollidiert, wird ",(0,r.kt)("inlineCode",{parentName:"p"},"-1")," zur\xfcckgeliefert."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:12,mdxType:"Comment"})),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("h2",{parentName:"div",id:"messung"},"Messung"),(0,r.kt)(s,{parentName:"div",type:"heading",nr:4,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.distance_to(dory)\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"misst die Distanz zwischen ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo")," und ",(0,r.kt)("inlineCode",{parentName:"p"},"dory"),"."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:13,mdxType:"Comment"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"nemo.angle_to(dory)\n")),(0,r.kt)("div",{className:"commentable"},(0,r.kt)("p",{parentName:"div"},"misst den Winkel von ",(0,r.kt)("inlineCode",{parentName:"p"},"nemo")," aus in Richtung ",(0,r.kt)("inlineCode",{parentName:"p"},"dory"),"."),(0,r.kt)(s,{parentName:"div",type:"paragraph",nr:14,mdxType:"Comment"})))}u.isMDXComponent=!0},17748:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/actor-position-d4e9c8bfc9196ab76a7e42e716e77503.svg"}}]);