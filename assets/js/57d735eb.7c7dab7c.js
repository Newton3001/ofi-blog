"use strict";(self.webpackChunkofi_blog_versioned=self.webpackChunkofi_blog_versioned||[]).push([[37424],{50632:(_,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>t,default:()=>p,frontMatter:()=>i,metadata:()=>m,toc:()=>o});var r=n(83117),a=(n(67294),n(3905));n(61839);const i={sidebar_custom_props:{id:"55b1da57-268c-415b-abce-5203e155afac"}},t="Hangman",m={unversionedId:"Programmieren/Software-Engineering/Hangman",id:"version-24ef/Programmieren/Software-Engineering/Hangman",title:"Hangman",description:"Zuf\xe4llige W\xf6rter generieren",source:"@site/versioned_docs/version-24ef/01-Programmieren/05-Software-Engineering/02-Hangman.md",sourceDirName:"01-Programmieren/05-Software-Engineering",slug:"/Programmieren/Software-Engineering/Hangman",permalink:"/24ef/Programmieren/Software-Engineering/Hangman",draft:!1,editUrl:"https://github.com/lebalz/ofi-blog/tree/main/docs",tags:[],version:"24ef",sidebarPosition:2,frontMatter:{sidebar_custom_props:{id:"55b1da57-268c-415b-abce-5203e155afac"}},sidebar:"version-24ef/sidebar",previous:{title:"Techniken im Software Engineering",permalink:"/24ef/Programmieren/Software-Engineering/Techniken"},next:{title:"NumTrip",permalink:"/24ef/Programmieren/NumTrip/"}},l={},o=[{value:"Zuf\xe4llige W\xf6rter generieren",id:"zuf\xe4llige-w\xf6rter-generieren",level:2},{value:"\u2b50 Hangman ASCII-Bilder",id:"-hangman-ascii-bilder",level:2}],s=(g="Comment",function(_){return console.warn("Component "+g+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",_)});var g;const d={toc:o};function p(_){let{components:e,...n}=_;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"commentable"},(0,a.kt)("h1",{parentName:"div",id:"hangman"},"Hangman"),(0,a.kt)(s,{parentName:"div",type:"heading",nr:0,mdxType:"Comment"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"     __________        __________        __________        __________        __________        __________     \n     |                 |/                |/        |       |/        |       |/        |       |/        |    \n     |                 |                 |         O       |         O       |         O       |         O    \n     |                 |                 |                 |         |       |        -|-      |        -|-   \n     |                 |                 |                 |                 |                 |        / \\   \n     |                 |                 |                 |                 |                 |  GAME OVER   \n    _|_______         _|_______         _|_______         _|_______         _|_______         _|_______     \n___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ \n")),(0,a.kt)("div",{className:"commentable"},(0,a.kt)("h2",{parentName:"div",id:"zuf\xe4llige-w\xf6rter-generieren"},"Zuf\xe4llige W\xf6rter generieren"),(0,a.kt)(s,{parentName:"div",type:"heading",nr:1,mdxType:"Comment"})),(0,a.kt)("div",{className:"commentable"},(0,a.kt)("p",{parentName:"div"},"Um zuf\xe4llige, deutsche W\xf6rter zu generieren, kann man die Bibliothek ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/MaximilianFreitag/Zufallswort"},"zufallsworte")," installieren, indem im Python-Terminal von VS Code folgender Befehl eingegeben wird:"),(0,a.kt)(s,{parentName:"div",type:"paragraph",nr:0,mdxType:"Comment"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pip3 install zufallsworte\n")),(0,a.kt)("div",{className:"commentable"},(0,a.kt)("p",{parentName:"div"},"Anschliessend kann wie folgt ein zuf\xe4lliges Wort abgefragt werden:"),(0,a.kt)(s,{parentName:"div",type:"paragraph",nr:1,mdxType:"Comment"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"import zufallsworte as zufall\n\nwort = zufall.zufallswoerter(1)[0]  # gibt ein Zufallswort zur\xfcck\n")),(0,a.kt)("div",{className:"commentable"},(0,a.kt)("h2",{parentName:"div",id:"-hangman-ascii-bilder"},"\u2b50 Hangman ASCII-Bilder"),(0,a.kt)(s,{parentName:"div",type:"heading",nr:2,mdxType:"Comment"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"\nHANGMANS_RAW = ''' 18 Zeichen ergeben ein Bild...\n                                         __________        __________        __________        __________        __________        __________        __________        __________        __________     \n                       |                 |                 |/                |/        |       |/        |       |/        |       |/        |       |/        |       |/        |       |/        |    \n                       |                 |                 |                 |                 |         O       |         O       |         O       |         O       |         O       |         O    \n                       |                 |                 |                 |                 |                 |         |       |        -|       |        -|       |        -|-      |        -|-   \n                       |                 |                 |                 |                 |                 |                 |                 |          \\      |          \\      |        / \\   \n                       |                 |                 |                 |                 |                 |                 |                 |                 |                 |  GAME OVER   \n    _________         _|_______         _|_______         _|_______         _|_______         _|_______         _|_______         _|_______         _|_______         _|_______         _|_______     \n___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ ___/         \\___ \n'''.split('\\n')[1:-1] # ohne erste und letzte Zeile\n\n# enth\xe4lt 11 ASCII-Bilder, f\xfcr jeden Spiel-Zustand einen\nHANGMANS = ['\\n'.join([line[i : i + 18] for line in HANGMANS_RAW]) for i in range(0, 11 * 18, 18)]\n\ndef get_hangman(nr):\n    '''\n    nr: int values from 0 to 10\n    '''\n    return HANGMANS[nr]\n\nprint(get_hangman(6))\n")))}p.isMDXComponent=!0}}]);