"use strict";(self.webpackChunkofi_blog_versioned=self.webpackChunkofi_blog_versioned||[]).push([[8601],{3905:(e,n,t)=>{t.d(n,{Zo:()=>o,kt:()=>k});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function m(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=a.createContext({}),l=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):m(m({},n),e)),t},o=function(e){var n=l(e.components);return a.createElement(d.Provider,{value:n},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},N=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),s=l(t),N=i,k=s["".concat(d,".").concat(N)]||s[N]||c[N]||r;return t?a.createElement(k,m(m({ref:n},o),{},{components:t})):a.createElement(k,m({ref:n},o))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,m=new Array(r);m[0]=N;var p={};for(var d in n)hasOwnProperty.call(n,d)&&(p[d]=n[d]);p.originalType=e,p[s]="string"==typeof e?e:i,m[1]=p;for(var l=2;l<r;l++)m[l]=t[l];return a.createElement.apply(null,m)}return a.createElement.apply(null,t)}N.displayName="MDXCreateElement"},13656:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>m,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>l});var a=t(87462),i=(t(67294),t(3905));const r={sidebar_label:"Listen 2D",sidebar_custom_props:{id:"4f55c963-d60b-4e97-bab7-cfaa8f8b0cf1",source:{name:"sdg",ref:"https://gitlab.gbsl.website/gymbefin23/material/-/snippets/11"}}},m="Zweidimensionale Listen",p={unversionedId:"Programmieren/Python/Listen-2D",id:"version-24ef/Programmieren/Python/Listen-2D",title:"Zweidimensionale Listen",description:"Zweidimensionale Liste",source:"@site/versioned_docs/version-24ef/01-Programmieren/04-Python/02-Listen-2D.md",sourceDirName:"01-Programmieren/04-Python",slug:"/Programmieren/Python/Listen-2D",permalink:"/24ef/Programmieren/Python/Listen-2D",draft:!1,editUrl:"https://github.com/lebalz/ofi-blog/tree/main/docs",tags:[],version:"24ef",sidebarPosition:2,frontMatter:{sidebar_label:"Listen 2D",sidebar_custom_props:{id:"4f55c963-d60b-4e97-bab7-cfaa8f8b0cf1",source:{name:"sdg",ref:"https://gitlab.gbsl.website/gymbefin23/material/-/snippets/11"}}},sidebar:"version-24ef/sidebar",previous:{title:"Listen 1D",permalink:"/24ef/Programmieren/Python/Listen-1D"},next:{title:"Listen Erzeugen",permalink:"/24ef/Programmieren/Python/Listcomprehension"}},d={},l=[{value:"\u2b50\ufe0f Bilder als Listen darstellen",id:"\ufe0f-bilder-als-listen-darstellen",level:2}],o=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",n)},s=o("Comment"),c=o("Figure"),N=o("SourceRef"),k=o("Answer"),y=o("Hint"),g=o("Solution"),v={toc:l},b="wrapper";function u(e){let{components:n,...r}=e;return(0,i.kt)(b,(0,a.Z)({},v,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("h1",{parentName:"div",id:"zweidimensionale-listen"},"Zweidimensionale Listen"),(0,i.kt)(s,{parentName:"div",type:"heading",nr:0,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)(c,{parentName:"div",options:{},mdxType:"Figure"},(0,i.kt)("img",{alt:"Zweidimensionale Liste",src:t(274).Z,width:"1024",height:"576"}),(0,i.kt)("figcaption",{parentName:"Figure"},(0,i.kt)("span",{parentName:"figcaption",style:{flexGrow:1}}),"Zweidimensionale Liste",(0,i.kt)("span",{parentName:"figcaption",style:{flexGrow:1}}),(0,i.kt)(N,{parentName:"figcaption",bib:{author:"Christian Mayer",source:"https://blog.finxter.com/python-list-of-lists/",licence:"Unknown",licence_url:"",edited:!1},mdxType:"SourceRef"}))),(0,i.kt)(s,{parentName:"div",type:"figure",nr:0,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Eine Liste, welche einfach eine Reihe von Zahlen oder Texten enth\xe4lt, ist eine ",(0,i.kt)("strong",{parentName:"p"},"eindimensionale")," Liste. Aus der Mathematik kennen wir auch Matrizen, oder Tabellen. Diese bestehen aus ",(0,i.kt)("strong",{parentName:"p"},"Zeilen")," und ",(0,i.kt)("strong",{parentName:"p"},"Spalten"),", haben also ",(0,i.kt)("strong",{parentName:"p"},"zwei Dimensionen"),"."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:0,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Das kann man in Python auch machen. Man muss dazu f\xfcr jede Zeile eine Liste erzeugen und dann diese Listen als Elemente in einer weiteren Liste speichern. So entsteht eine Liste von Listen."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:1,mdxType:"Comment"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"# Eine Liste\n[\n    [1, 2, 3], # Zeile\n    [4, 5, 6], # Zeile\n    [7, 8, 9], # Zeile\n]\n\n# oder \xe4quivalent in einer Zeile dargestellt\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n")),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Man kann in Python auch zwei- oder gar ",(0,i.kt)("em",{parentName:"p"},"n"),"-dimensionale Listen haben. F\xfcr Python ist das nichts anderes, als eine Liste, deren Elemente wiederum Listen sind."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:2,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"F\xfcr jede zus\xe4tzlich Dimension wird eine weitere Verschachtelungsstufe hinzugef\xfcgt.\nBei zwei Dimensionen kann man auf diese Weise in Python Matrizen, bzw. Tabellen mit mehreren Zeilen und Spalten darstellen."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:3,mdxType:"Comment"})),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"3-x-3-matrix"},"3 x 3 Matrix"),(0,i.kt)(s,{parentName:"div",type:"heading",nr:1,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Eine Matrix ist eine Liste von Listen"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:4,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix = [\n    [1, 2, 3], \n    [4, 5, 6], \n    [7, 8, 9]\n]\nprint(matrix)\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"zugriff-"},"Zugriff ",(0,i.kt)("inlineCode",{parentName:"h3"},"[][]")),(0,i.kt)(s,{parentName:"div",type:"heading",nr:2,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Auf einzelne Element in der Matrix zugreifen"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:5,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"# kann auch auf einer Zeile geschrieben werden:\nmatrix = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n]\n\n# 1. Zeile \xe4ndern - zugewiesener Wert muss eine Liste sein\nmatrix[0] = [11, 12, 13]\n# 3. Wert in 2. Zeile ver\xe4ndern\nmatrix[1][2] = 0\n# Werte ausgeben\nprint('Matrix:', matrix)\nprint('Erste Zeile:', matrix[0])\nprint('Zeile 2, Spalte 3:', matrix[1][2])\nprint('Zeile 3, Spalte 1:', matrix[2][0])\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"schleife-\xfcber-zeilen"},"Schleife \xfcber Zeilen"),(0,i.kt)(s,{parentName:"div",type:"heading",nr:3,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Schleife \xfcber einzelne Zeilen ",(0,i.kt)("i",{parentName:"p",className:"mdi-arrow-right mdi "})," Zeilen sind wieder Listen"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:6,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\nfor zeile in matrix:\n    print(zeile)\n"))),(0,i.kt)("admonition",{type:"aufgabe"},(0,i.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"pprint()")),(0,i.kt)(k,{type:"state",webKey:"32b77e06-fa29-4ed2-950c-e28b0259eb3c",mdxType:"Answer"}),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Schreiben Sie eine Funktion ",(0,i.kt)("inlineCode",{parentName:"p"},"pprint")," (Abk\xfcrzung f\xfcr ",(0,i.kt)("inlineCode",{parentName:"p"},"Pretty Print"),"), welche eine 2D-Liste \xfcbersichtlich ausgibt:"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:7,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py"},"pprint([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n# Ausgabe bspw.\n# [\n#    [1, 2, 3],\n#    [4, 5, 6],\n#    [7, 8, 9],\n# ]\n")),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py id=df2cf353-14ac-4676-b560-5024a4946db5 title=pprint.py",live_py:!0,id:"df2cf353-14ac-4676-b560-5024a4946db5",title:"pprint.py"},"def pprint(mat2d):\n    print(mat2d)\n\npprint([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\npprint([[1, 2, 3, 4], [5, 6, 7, 8], [9, 8, 7, 6]])\n")),(0,i.kt)(y,{title:"\xdcber Funktionen...",mdxType:"Hint"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Funktionen werden in Python mit dem Schl\xfcsselwort ",(0,i.kt)("inlineCode",{parentName:"p"},"def")," definiert."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:8,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py"},"def pretty_print(matrix2d):\n#   \\__________/ \\_______/\n#    Fkt. Name      Parameter\n#   die Parameter k\xf6nnen im Funktionsk\xf6rper (der einger\xfcckte Teil) verwendet werden\n    print(matrix2d)\n\n"))),(0,i.kt)(g,{webKey:"4f1b3847-4bd3-49ab-83dd-3b9982b33cd6",mdxType:"Solution"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"def pprint(mat2d):\n    print('[')\n    for row in mat2d:\n        print(' ', row, end=',\\n')\n    print(']')\n\npprint([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n")))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"durch-alle-elemente-iterieren"},"Durch alle Elemente Iterieren"),(0,i.kt)(s,{parentName:"div",type:"heading",nr:4,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Dazu wird eine ",(0,i.kt)("strong",{parentName:"p"},"verschachtelte Schleife")," \xfcber Zeilen und Spalten verwendet."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:9,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nfor zeile in matrix:\n    for zahl in zeile:\n        print(zahl)\n")),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Oder man greift \xfcber die Zeilen- (",(0,i.kt)("inlineCode",{parentName:"p"},"i"),") und Spaltenindices (",(0,i.kt)("inlineCode",{parentName:"p"},"j"),") auf die Elemente zu:"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:10,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nfor i in range(3):\n    for j in range(3):\n        print(f'[i: {i}, j: {j}] =', matrix[i][j])\n"))),(0,i.kt)("admonition",{type:"aufgabe"},(0,i.kt)(k,{type:"state",webKey:"c7a2e1a2-1476-4fcc-b4f9-fdcbdcc2a7b6",mdxType:"Answer"}),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Obiges Beispiel funktioniert nur f\xfcr eine ",(0,i.kt)("inlineCode",{parentName:"p"},"3x3")," Matrix. \xc4ndern Sie das Programm so ab, dass es f\xfcr beliebige zweidimensionale Listen funktioniert. Probieren Sie Ihre L\xf6sung, indem Sie die unterschiedlichen ",(0,i.kt)("inlineCode",{parentName:"p"},"matrix")," Variablen einkommentieren..."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:11,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py id=1b0f78c9-57f7-47ee-9597-53b178aeb52d",live_py:!0,id:"1b0f78c9-57f7-47ee-9597-53b178aeb52d"},"matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [9, 9, 9], [1, 8, 7]]\n# matrix = [[1, 2, 3, 4, 5],[4, 5, 6, 5, 4], [7, 8, 9, 9, 9], [9, 9, 9, 8, 7]]\n# matrix = [[1, 2], [4, 5], [6, 7], [8, 9], [10, 11]]\n\nfor i in range(3):\n    for j in range(3):\n        print(f'[i: {i}, j: {j}] =', matrix[i][j])\n")),(0,i.kt)(y,{mdxType:"Hint"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Die L\xe4nge einer Liste kann mit ",(0,i.kt)("inlineCode",{parentName:"p"},"len")," abgefragt werden:"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:12,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"print(len([2, 3, 5]))\n"))),(0,i.kt)(g,{webKey:"c5091336-dac5-440a-9b95-9b9f2d482b48",mdxType:"Solution"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix = [[1, 2], [4, 5], [6, 7], [8, 9], [10, 11]]\n\nfor i in range(len(matrix)):\n    for j in range(len(matrix[i])):\n        print(f'[i: {i}, j: {j}] =', matrix[i][j])\n")))),(0,i.kt)("admonition",{title:"2D-Liste erstellen",type:"aufgabe"},(0,i.kt)(k,{type:"state",webKey:"302c5fcd-76d3-4fa7-aef0-c52b9d03422d",mdxType:"Answer"}),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h4",{parentName:"div",id:"create_frompy"},(0,i.kt)("inlineCode",{parentName:"h4"},"create_from.py")),(0,i.kt)(s,{parentName:"div",type:"heading",nr:5,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"\xc4ndern Sie den untenstehenden Code so ab, dass die Variabe ",(0,i.kt)("inlineCode",{parentName:"p"},"matrix")," eine Matrix mit der gegebenen Anzahl Zeilen- und Spalten sowie \xfcberall den Zellenwerten ",(0,i.kt)("inlineCode",{parentName:"p"},"ZAHL")," enth\xe4lt. Schreiben Sie das Programm so, dass es auch bei ge\xe4nderten ",(0,i.kt)("inlineCode",{parentName:"p"},"ZEILEN"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"SPALTEN")," und ",(0,i.kt)("inlineCode",{parentName:"p"},"ZAHL"),"en Werten funktioniert."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:13,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py id=01a6ec22-0819-4b61-9b8d-7a1a62224ef8 title=create_from.py",live_py:!0,id:"01a6ec22-0819-4b61-9b8d-7a1a62224ef8",title:"create_from.py"},"ZEILEN = 3\nSPALTEN = 4\nZAHL = 1\n\nmatrix = []\n\nprint(matrix) # => [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]\n")),(0,i.kt)(y,{mdxType:"Hint"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Es braucht eine doppelte Schleife, wobei in der ersten Schleife eine leere Zeilen-Liste erzeugt wird, welche dann in der zweiten (verschachtelten) Schleife mit den Zahlen gef\xfcllt wird."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:14,mdxType:"Comment"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"/24ef/Programmieren/Python/Listen-1D#element-hinzuf%C3%BCgen-append"},"\ud83d\udc49 Elemente zu einer Liste hinzuf\xfcgen")),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:15,mdxType:"Comment"}))))),(0,i.kt)(g,{webKey:"e8b99d8b-7838-4179-b4bb-8c7b8ceadedd",mdxType:"Solution"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"ZEILEN = 3\nSPALTEN = 4\nZAHL = 1\n\nmatrix = []\n\nfor i in range(ZEILEN):\n    zeile = []\n    for j in range(SPALTEN):\n        zeile.append(ZAHL)\n    matrix.append(zeile)\n\nprint(matrix)\n"))),(0,i.kt)(g,{webKey:"e8b99d8b-7838-4179-b4bb-8c7b8ceadedd",title:"\u2b50\ufe0f L\xf6sung: Mit List-Comprehension",mdxType:"Solution"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"ZEILEN = 3\nSPALTEN = 4\nZAHL = 1\nmatrix = [\n    [ZAHL] * SPALTEN for i in range(ZEILEN)\n]\n\nprint(matrix)\n"))),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h4",{parentName:"div",id:"diagpy"},(0,i.kt)("inlineCode",{parentName:"h4"},"diag.py")),(0,i.kt)(s,{parentName:"div",type:"heading",nr:6,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Erstellen Sie ein Programm, welches eine ",(0,i.kt)("inlineCode",{parentName:"p"},"SIZE x SIZE"),"-Matrix, die in der Diagonalen von Oben-Links nach Unten-Rechts ",(0,i.kt)("inlineCode",{parentName:"p"},"1"),"en enth\xe4lt und sonst mit ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),"en gef\xfcllt ist. Probieren Sie Ihr Programm auch mit anderen Werten f\xfcr ",(0,i.kt)("inlineCode",{parentName:"p"},"SIZE")," aus."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:16,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py"},"SIZE = 4\nmatrix = []\n# => [\n#        [1, 0, 0, 0],\n#        [0, 1, 0, 0],\n#        [0, 0, 1, 0],\n#        [0, 0, 0, 1],\n#    ]\n")),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py id=716d8f4a-7dc2-4948-a1ae-e5c7e93324fb title=diag.py",live_py:!0,id:"716d8f4a-7dc2-4948-a1ae-e5c7e93324fb",title:"diag.py"},"SIZE = 4\nmatrix = []\n\nprint(matrix)\n")),(0,i.kt)(g,{webKey:"3571eae1-ce0a-4a86-9373-dca332470f95",mdxType:"Solution"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"SIZE = 4\nmatrix = []\nfor i in range(SIZE):\n    row = []\n    for j in range(SIZE):\n        if i == j:\n            row.append(1)\n        else:\n            row.append(0)\n    matrix.append(row)\n\nprint(matrix)\n")))),(0,i.kt)("admonition",{title:"Was ist denn hier los?",type:"aufgabe"},(0,i.kt)(k,{type:"state",webKey:"c134f37d-8e4b-49e0-964e-355d202560bf",mdxType:"Answer"}),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("dl",{parentName:"div"},(0,i.kt)("dt",{parentName:"dl"},"Dateiname\n"),(0,i.kt)("dd",{parentName:"dl"},(0,i.kt)("strong",{parentName:"dd",className:"underline"},"EF-Informatik/docs/python/referenzen.md"))),(0,i.kt)(s,{parentName:"div",type:"deflist",nr:0,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"a = [1, 2, 3]\nb = a\nb[1] = 5\n\nprint('Liste a: ', a)\nprint('Liste b: ', b)\n")),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Wie erkl\xe4ren Sie sich dieses Verhalten?"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:17,mdxType:"Comment"})),(0,i.kt)(k,{type:"text",webKey:"7ffc70a8-50a8-40a1-97d0-f30be4e54910",mdxType:"Answer"}),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Lesen Sie den Abschnitt ",(0,i.kt)("a",{parentName:"p",href:"https://www.codingem.com/python-copy-list/#assignment-in-python"},"\ud83d\udc49 Assignment (=) in Python")," (",(0,i.kt)("em",{parentName:"p"},"The Copy Module in Python")," brauchen Sie nicht zu lesen). "),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:18,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"K\xf6nnen Sie damit auch folgendes Ph\xe4nomen erkl\xe4ren?"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:19,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix = []\n\nzeile = [0, 1, 0]\nfor i in range(3):\n    matrix.append(zeile)\n\nprint(matrix)\n\nmatrix[1][1] = 0 # nur den Wert in Zeile 1 in der Mitte auf 0 Setzen\n\nprint(matrix)\n")),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("i",{parentName:"p",className:"mdi-arrow-right mdi "})," Fassen Sie obiges Verhalten nun in eigene Worte im Dokument ",(0,i.kt)("strong",{parentName:"p",className:"underline"},"EF-Informatik/docs/python/referenzen.md"),"."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:20,mdxType:"Comment"}))),(0,i.kt)("admonition",{title:"H\xe4ufige Fehlerquellen",type:"warning"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Exotisches (und oft Grund f\xfcr Fehler):"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:21,mdxType:"Comment"})),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Innere Listen sind unterschiedlich lang durch"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:22,mdxType:"Comment"})),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Anh\xe4ngen eines weiteren Elementes"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:23,mdxType:"Comment"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Anh\xe4ngen einer weiteren Zeile mit unterschiedlicher L\xe4nge"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:24,mdxType:"Comment"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"..."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:25,mdxType:"Comment"}))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Einf\xfcgen eines String (oder irgend etwas anderes) in die \xe4ussere oder innere Liste"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:26,mdxType:"Comment"})))),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\nmatrix[1].append(13)\nmatrix.append([31])\nmatrix.insert(2, 'blabla')\n\nfor zeile in matrix:\n    print(zeile)\n"))),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("h2",{parentName:"div",id:"\ufe0f-bilder-als-listen-darstellen"},"\u2b50\ufe0f Bilder als Listen darstellen"),(0,i.kt)(s,{parentName:"div",type:"heading",nr:7,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Bilder k\xf6nnen im wesentlichen auch als 2- bzw 3-Dimensionale Listen betrachtet werden. Mit dem Paket ",(0,i.kt)("a",{parentName:"p",href:"https://pypi.org/project/pypng/"},"\ud83d\udc49 pypng")," lassen sich einfach Bilder erzeugen."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:27,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Paket installieren:"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:28,mdxType:"Comment"})),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"In VS Code ",(0,i.kt)("strong",{parentName:"p",className:"underline"},"Terminal > New Terminal")),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:29,mdxType:"Comment"}))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Eintippen ",(0,i.kt)("inlineCode",{parentName:"p"},"pip3 install pypng")),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:30,mdxType:"Comment"}))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Fertig \ud83e\udd73"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:31,mdxType:"Comment"})))),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Folgender Code erzeugt nun ein kleines Smiley:"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:32,mdxType:"Comment"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"import png # Paket png importieren\nsmiley = [\n    [000, 000, 000, 000, 000, 000],\n    [000, 255, 000, 000, 255, 000],\n    [000, 000, 000, 000, 000, 000],\n    [000, 255, 000, 000, 255, 000],\n    [000, 000, 255, 255, 000, 000],\n    [000, 000, 000, 000, 000, 000]\n]\n# Erzeuge ein Graustufen-Bild (0=Schwarz, 255=Weiss)\npng.from_array(simley, 'L').save('small_smiley.png')\n")),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Probieren Sie es aus!"),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:33,mdxType:"Comment"})),(0,i.kt)("admonition",{title:"Graustufen-Bilder",type:"aufgabe"},(0,i.kt)(k,{type:"state",webKey:"8131c3da-101f-44dd-8a32-3c8ff541186c",mdxType:"Answer"}),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("dl",{parentName:"div"},(0,i.kt)("dt",{parentName:"dl"},"Dateiname\n"),(0,i.kt)("dd",{parentName:"dl"},(0,i.kt)("strong",{parentName:"dd",className:"underline"},"EF-Informatik/exercises/mat-to-png.py"))),(0,i.kt)(s,{parentName:"div",type:"deflist",nr:1,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Wie Sie bemerken, ist das entstandene Bild nur ",(0,i.kt)("inlineCode",{parentName:"p"},"6x6")," Pixel gross - es muss entsprechend stark gezoomt werden, um das Smiley zu identifizieren."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:34,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Erweitern Sie das Programm so, dass Sie mit einem Zoom-Faktor angeben k\xf6nnen, auf wie viele Pixel ein Wert verteilt werden soll."),(0,i.kt)(s,{parentName:"div",type:"paragraph",nr:35,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-txt"},"               ______ ______\n      Zoom    |      |      |\n\u25a2\u25a2  --------\x3e |      |      |\n              |      |      |\n               \u203e\u203e\u203e\u203e\u203e\u203e \u203e\u203e\u203e\u203e\u203e\u203e\n"))))}u.isMDXComponent=!0},274:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/2d-listen-386eb5fccaee3fe7c7701e1a4508f634.jpeg"}}]);