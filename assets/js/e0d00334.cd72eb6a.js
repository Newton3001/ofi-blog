"use strict";(self.webpackChunkofi_blog_versioned=self.webpackChunkofi_blog_versioned||[]).push([[95665],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>k});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},l=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},o="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},N=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),o=s(n),N=i,k=o["".concat(d,".").concat(N)]||o[N]||c[N]||r;return n?a.createElement(k,m(m({ref:t},l),{},{components:n})):a.createElement(k,m({ref:t},l))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,m=new Array(r);m[0]=N;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p[o]="string"==typeof e?e:i,m[1]=p;for(var s=2;s<r;s++)m[s]=n[s];return a.createElement.apply(null,m)}return a.createElement.apply(null,n)}N.displayName="MDXCreateElement"},36126:(e,t,n)=>{n.d(t,{Z:()=>y});var a=n(67294);const i={strukto:"strukto_ZhOY",statement:"statement_vpj_",step:"step_tKqp",else:"else_NP0r",header:"header_k_sP",indent:"indent_eJWa",body:"body_vf1s",def:"def_yuKL",if:"if_Imq1",input:"input_o3ww",call:"call_Xwfp",bordered:"bordered_Zp7M"};var r=n(86010);const m=e=>a.createElement("div",{className:i.step},e.code),p=e=>a.createElement("div",{className:(0,r.default)(i.call,i.step,i.bordered)},e.code),d=e=>a.createElement("div",{className:(0,r.default)(i.step,i.statement)},e.code),s=e=>a.createElement("div",{className:(0,r.default)(i.repeat,i.step,i.indent)},a.createElement("div",{className:i.header},e.code),a.createElement("div",{className:i.body},e.block&&a.createElement(k,{program:e.block}))),l=e=>a.createElement("div",{className:(0,r.default)(i.def,i.step,i.indent)},a.createElement("div",{className:i.header},e.code),a.createElement("div",{className:i.body},e.block&&a.createElement(k,{program:e.block}))),o=e=>a.createElement("div",{className:(0,r.default)(i.input,i.step)},e.code),c=e=>a.createElement("div",{className:(0,r.default)(i.if,i.step,i.indent)},a.createElement("div",{className:i.header},e.code),a.createElement("div",{className:i.body},e.block&&a.createElement(k,{program:e.block}))),N=e=>a.createElement("div",{className:(0,r.default)(i.else,i.step)},a.createElement("div",{className:i.header},e.code),a.createElement("div",{className:i.body},e.block&&a.createElement(k,{program:e.block}))),k=e=>a.createElement("div",{className:i.strukto},e.program.map(((e,t)=>{switch(e.type){case"call":return a.createElement(p,{key:t,code:e.code});case"def":return a.createElement(l,{key:t,code:e.code,block:e.block});case"repeat":return a.createElement(s,{key:t,code:e.code,block:e.block});case"step":return a.createElement(m,{key:t,code:e.code});case"statement":return a.createElement(d,{key:t,code:e.code});case"input":return a.createElement(o,{key:t,code:e.code});case"if":return a.createElement(c,{key:t,code:e.code,block:e.block});case"elif":case"else":return a.createElement(N,{key:t,code:e.code||("else"===e.type?"Sonst":""),block:e.block})}}))),y=k},90377:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>h,frontMatter:()=>m,metadata:()=>d,toc:()=>l});var a=n(87462),i=(n(67294),n(3905)),r=n(36126);const m={sidebar_label:"Listen 1D",sidebar_custom_props:{id:"ad4d9802-8e3b-4706-bf2f-b6cac09a6cbd",source:{name:"sdg",ref:"https://gitlab.gbsl.website/gymbefin23/material/-/snippets/11"}}},p="Listen",d={unversionedId:"EF-Python/Python/Listen-1D",id:"EF-Python/Python/Listen-1D",title:"Listen",description:"Zum Speichern von mehreren Werten unter einem einzigen Namen verwendet man in Python Listen. Man kann sich Listen als Tabellen mit einer Spalte vorstellen. Die Zellen in der Tabelle werden als Elemente bezeichnet und sind durchnummeriert. So kann man einzelne in der Liste gespeichert Werte unterscheiden. Die Nummer eines Elements wird als dessen Index bezeichnet.",source:"@site/docs/EF-Python/03-Python/01-Listen-1D.md",sourceDirName:"EF-Python/03-Python",slug:"/EF-Python/Python/Listen-1D",permalink:"/EF-Python/Python/Listen-1D",draft:!1,editUrl:"https://github.com/lebalz/ofi-blog/edit/main/docs/EF-Python/03-Python/01-Listen-1D.md",tags:[],version:"current",lastUpdatedAt:1675911179,formattedLastUpdatedAt:"9. Feb. 2023",sidebarPosition:1,frontMatter:{sidebar_label:"Listen 1D",sidebar_custom_props:{id:"ad4d9802-8e3b-4706-bf2f-b6cac09a6cbd",source:{name:"sdg",ref:"https://gitlab.gbsl.website/gymbefin23/material/-/snippets/11"}}},sidebar:"sidebar",previous:{title:"Python Repetition",permalink:"/EF-Python/Python/turtle-repe"},next:{title:"Listen 2D",permalink:"/EF-Python/Python/Listen-2D"}},s={},l=[{value:"Aufgaben",id:"aufgaben",level:2},{value:"Eindimensionale Listen",id:"eindimensionale-listen",level:2}],o=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},c=o("Comment"),N=o("Answer"),k=o("Hint"),y=o("Solution"),v={toc:l},g="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(g,(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("h1",{parentName:"div",id:"listen"},"Listen"),(0,i.kt)(c,{parentName:"div",type:"heading",nr:0,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Zum Speichern von ",(0,i.kt)("strong",{parentName:"p"},"mehreren Werten")," unter einem ",(0,i.kt)("strong",{parentName:"p"},"einzigen Namen")," verwendet man in Python Listen. Man kann sich ",(0,i.kt)("strong",{parentName:"p",className:"underline"},"Listen")," als Tabellen mit einer Spalte vorstellen. Die Zellen in der Tabelle werden als ",(0,i.kt)("strong",{parentName:"p"},"Elemente")," bezeichnet und sind durchnummeriert. So kann man einzelne in der Liste gespeichert Werte unterscheiden. Die Nummer eines Elements wird als dessen ",(0,i.kt)("strong",{parentName:"p"},"Index")," bezeichnet."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:0,mdxType:"Comment"})),(0,i.kt)("admonition",{title:"Wichtig",type:"important"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Das erste Element in der Liste tr\xe4gt den Index 0."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:1,mdxType:"Comment"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Der Index des letzten Elementes ist die L\xe4nge der Liste minus 1."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:2,mdxType:"Comment"}))))),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Das folgende Bild illustriert dies f\xfcr eine Liste mit 4 Noten. Die ",(0,i.kt)("strong",{parentName:"p"},"L\xe4nge")," der Liste ist ",(0,i.kt)("strong",{parentName:"p"},"4"),", das letzte Element tr\xe4gt den ",(0,i.kt)("strong",{parentName:"p"},"Index 3"),"."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:3,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("dl",{parentName:"div"},(0,i.kt)("dt",{parentName:"dl"},"Index\n"),(0,i.kt)("dd",{parentName:"dl"},"\u3000",(0,i.kt)("strong",{parentName:"dd"},"Wert")),(0,i.kt)("dt",{parentName:"dl"},(0,i.kt)("inlineCode",{parentName:"dt"},"0")),(0,i.kt)("dd",{parentName:"dl"},(0,i.kt)("i",{parentName:"dd",className:"mdi-arrow-right-thin mdi "})," ",(0,i.kt)("inlineCode",{parentName:"dd"},"4.5")),(0,i.kt)("dt",{parentName:"dl"},(0,i.kt)("inlineCode",{parentName:"dt"},"1")),(0,i.kt)("dd",{parentName:"dl"},(0,i.kt)("i",{parentName:"dd",className:"mdi-arrow-right-thin mdi "})," ",(0,i.kt)("inlineCode",{parentName:"dd"},"5")),(0,i.kt)("dt",{parentName:"dl"},(0,i.kt)("inlineCode",{parentName:"dt"},"2")),(0,i.kt)("dd",{parentName:"dl"},(0,i.kt)("i",{parentName:"dd",className:"mdi-arrow-right-thin mdi "})," ",(0,i.kt)("inlineCode",{parentName:"dd"},"3.5")),(0,i.kt)("dt",{parentName:"dl"},(0,i.kt)("inlineCode",{parentName:"dt"},"3")),(0,i.kt)("dd",{parentName:"dl"},(0,i.kt)("i",{parentName:"dd",className:"mdi-arrow-right-thin mdi "})," ",(0,i.kt)("inlineCode",{parentName:"dd"},"5.5"))),(0,i.kt)(c,{parentName:"div",type:"deflist",nr:0,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"In Python kann man diese Liste wie folgt erzeugen:"),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:4,mdxType:"Comment"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"noten = [4.5, 5, 3.5, 5.5]\nprint('Die vierte Note war eine', noten[3])\n")),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Im Beispiel wird die vierte Note mit dem Index ",(0,i.kt)("inlineCode",{parentName:"p"},"3")," ausgegeben."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:5,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("h2",{parentName:"div",id:"aufgaben"},"Aufgaben"),(0,i.kt)(c,{parentName:"div",type:"heading",nr:1,mdxType:"Comment"})),(0,i.kt)("admonition",{title:"1. listen-1d.py",type:"aufgabe"},(0,i.kt)(N,{type:"state",webKey:"ec010329-3a79-4bd3-8e8d-35be2c5d246e",mdxType:"Answer"}),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("dl",{parentName:"div"},(0,i.kt)("dt",{parentName:"dl"},"Dateiname\n"),(0,i.kt)("dd",{parentName:"dl"},(0,i.kt)("strong",{parentName:"dd",className:"underline"},"EF-Informatik/exercises/listen-1d.py"))),(0,i.kt)(c,{parentName:"div",type:"deflist",nr:1,mdxType:"Comment"})),(0,i.kt)("ol",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Erstellen Sie das folgende Programm in Ihrem Repository  "),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:6,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("div",{parentName:"div"},(0,i.kt)("details",{parentName:"div"},(0,i.kt)("summary",{parentName:"details"},"Programm"),(0,i.kt)("pre",{parentName:"details"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:'reference title="listen-1d.py"',reference:!0,title:'"listen-1d.py"'},"https://github.com/lebalz/ofi-blog/blob/main/docs/EF-Python/03-Python/assets/listen-1d.py\n")))),(0,i.kt)(c,{parentName:"div",type:"detailsWrapper",nr:0,mdxType:"Comment"}))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"F\xfchren Sie das Programm Zeile f\xfcr Zeile aus und untersuchen Sie die verschiedenen Listen-Optionen."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:7,mdxType:"Comment"}))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Welche Fehlermeldung erscheint beim ",(0,i.kt)("em",{parentName:"p"},"Szenario 6"),"?"),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:8,mdxType:"Comment"})),(0,i.kt)(N,{type:"text",webKey:"e8a516a5-1c07-4a4b-8092-7ec3a103923e",mdxType:"Answer"})),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"commit & push..."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:9,mdxType:"Comment"}))))),(0,i.kt)("admonition",{title:"2. Was steht geschrieben?",type:"aufgabe"},(0,i.kt)(N,{type:"state",webKey:"84fa5115-9483-4c76-8aca-7112371d5b3e",mdxType:"Answer"}),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("dl",{parentName:"div"},(0,i.kt)("dt",{parentName:"dl"},"Dateiname\n"),(0,i.kt)("dd",{parentName:"dl"},(0,i.kt)("strong",{parentName:"dd",className:"underline"},"EF-Informatik/exercises/listen-word-riddle.py"))),(0,i.kt)(c,{parentName:"div",type:"deflist",nr:2,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Gegeben ist ein ",(0,i.kt)("inlineCode",{parentName:"p"},"ALPHABET")," und eine Nachricht ",(0,i.kt)("inlineCode",{parentName:"p"},"MESSAGE"),". In der Nachricht sind die Indices der zugeh\xf6rigen Buchstaben gespeichert. Schreiben Sie ein Programm, welches die Nachricht decodiert und in Buchstabenform darstellt."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:10,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py"},"ALPHABET = [' ', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\nMESSAGE = [12, 9, 19, 20, 0, 18, 9, 4, 4, 12, 5]\n")),(0,i.kt)(k,{mdxType:"Hint"},(0,i.kt)("mermaid",{parentName:"admonition",value:"sequenceDiagram\n    MESSAGE--\x3e>MESSAGE: [0] = 12\n    MESSAGE->>ALPHABET: index 12?\n    ALPHABET--\x3e>ALPHABET: [12] => L\n    MESSAGE--\x3e>MESSAGE: [1] = 9\n    MESSAGE->>ALPHABET: index 9?\n    ALPHABET--\x3e>ALPHABET: [9] => ..."}))),(0,i.kt)("admonition",{title:"3. Meine Nummer 1",type:"aufgabe"},(0,i.kt)(N,{type:"state",webKey:"56fcba0a-c357-462b-b4e6-8f7d76fbe932",mdxType:"Answer"}),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("dl",{parentName:"div"},(0,i.kt)("dt",{parentName:"dl"},"Dateiname\n"),(0,i.kt)("dd",{parentName:"dl"},(0,i.kt)("strong",{parentName:"dd",className:"underline"},"EF-Informatik/exercises/listen-word-riddle2.py"))),(0,i.kt)(c,{parentName:"div",type:"deflist",nr:3,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Nun wurde eine weitere Zuordnungsstufe hinzugef\xfcgt \ud83d\ude2e. In der ",(0,i.kt)("inlineCode",{parentName:"p"},"MESSAGE")," steht, an welcher Stelle im ",(0,i.kt)("inlineCode",{parentName:"p"},"MAPPING")," der Index steht, an welchem der gesuchte Buchstabe zu finden ist. Finden Sie die Nachricht?"),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:11,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py"},"ALPHABET = [' ', '_', '.', ':', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nMAPPING = [54, 58, 53, 4, 8, 60, 45, 60, 12, 41, 13, 47, 60, 4, 44, 56, 62, 4, 58, 47, 41, 60, 55, 3, 9, 45, 60, 10, 19, 2, 54, 62, 48, 54, 56, 18, 41, 53, 44, 4, 58, 43, 1, 50, 54, 13, 2, 2, 49, 6, 1, 59, 14, 58, 16, 4]\nMESSAGE = [32, 5, 7, 15, 51, 23, 3, 13, 48, 2, 11, 29, 14, 6, 16, 1, 9, 0, 12, 46, 41, 22, 37, 17, 38, 25, 31, 18, 20, 30, 21, 39, 40, 36, 33, 26, 55, 53, 42, 49, 8, 52, 10, 27, 4, 24, 50, 44, 54, 28, 45, 35, 47, 43, 34, 19]\n")),(0,i.kt)(k,{mdxType:"Hint"},(0,i.kt)("mermaid",{parentName:"admonition",value:"sequenceDiagram\n    MESSAGE--\x3e>+MESSAGE: [0] = 32\n    MESSAGE->>MAPPING: index 32?\n    MAPPING--\x3e>MAPPING: [32] => 48\n    MAPPING->>ALPHABET: index 48?\n    ALPHABET--\x3e>ALPHABET: [48] => h\n    MESSAGE--\x3e>MESSAGE: [1] = 5\n    MESSAGE->>MAPPING: index 5?\n    MAPPING--\x3e>MAPPING: [5] => 60\n    MAPPING->>ALPHABET: index 60?\n    ALPHABET--\x3e>ALPHABET: [60] => ..."})),(0,i.kt)(k,{title:"print() Optionen",mdxType:"Hint"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Normalerweise f\xfcgt die ",(0,i.kt)("inlineCode",{parentName:"p"},"print"),"-Funktion am Ende einer Ausgabe immer das Zeichen ",(0,i.kt)("inlineCode",{parentName:"p"},"\\n")," an, was von der Konsole als Steuerzeichen f\xfcr eine neue Zeile interpretiert wird. Das k\xf6nnen Sie aber auch \xe4ndern, indem Sie explizit vorgeben, welche Zeichen am Ende hinzugef\xfcgt werden:"),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:12,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",style:{},className:"flex flex-flex"},(0,i.kt)("div",{parentName:"div",style:{flexBasis:"380px"},className:"item"},(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"# Mit L\xfccke zwischen einzelnen prints\nfor i in range(3):\n    print(f'L\xfccke {i}', end=' ')\n"))),(0,i.kt)("div",{parentName:"div",style:{flexBasis:"380px"},className:"item"},(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"# Ohne Zeichen zwischen einzelnen prints\nfor i in range(3):\n    print(f'Ohne {i}', end='')\n"))),(0,i.kt)("div",{parentName:"div",style:{flexBasis:"380px"},className:"item"},(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"# Fancy: mit Rakete und neuer Zeile zwischen einzelnen prints\nfor i in range(3):\n    print(f'Hello {i}', end=' \ud83d\ude80\\n')\n")))))),(0,i.kt)("admonition",{title:"4. Primzahlen",type:"aufgabe"},(0,i.kt)(N,{type:"state",webKey:"00361219-0652-4870-9a42-c3cf8250b9a4",mdxType:"Answer"}),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("dl",{parentName:"div"},(0,i.kt)("dt",{parentName:"dl"},"Dateiname\n"),(0,i.kt)("dd",{parentName:"dl"},(0,i.kt)("strong",{parentName:"dd",className:"underline"},"EF-Informatik/exercises/primzahlen.py"))),(0,i.kt)(c,{parentName:"div",type:"deflist",nr:4,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Schreiben Sie ein Programm welches eine Liste mit allen Primzahlen zwischen 1 und 100 erstellt und diese Liste am Schluss auf der Konsole ausgibt."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:13,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("strong",{parentName:"p"},"Bevor Sie Programmieren"),": Diskutieren Sie Ihr Vorgehen mit einer Kolleg:in und besprechen Sie gemeinsam eine algorithmische L\xf6sung f\xfcr das Problem. Halten Sie stichwortartig fest, was Sie besprochen haben."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:14,mdxType:"Comment"})),(0,i.kt)(k,{mdxType:"Hint"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Um den Rest bei einer Division zu berechnen, kann der Modulo-Operator verwendet werden."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:15,mdxType:"Comment"})),(0,i.kt)("admonition",{parentName:"admonition",type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"modulo-"},"Modulo ",(0,i.kt)("inlineCode",{parentName:"h3"},"%")),(0,i.kt)(c,{parentName:"div",type:"heading",nr:2,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Um den ganzzahligen Rest bei der Division von zwei ganzen Zahlen zu bestimmen, wird der Modulo-Operator verwendet.\nBiespiel: Was ist der ganzzahlige Rest von ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mn",{parentName:"mrow"},"7"),(0,i.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,i.kt)("mn",{parentName:"mrow"},"5")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"7 / 5")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"7"),(0,i.kt)("span",{parentName:"span",className:"mord"},"/"),(0,i.kt)("span",{parentName:"span",className:"mord"},"5"))))),"?"),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:16,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"print(7 % 5)\n")))),(0,i.kt)(y,{webKey:"d7521e75-f8c2-4b23-aa83-263b8b8d5d0c",title:"L\xf6sung: Struktogramm",mdxType:"Solution"},(0,i.kt)(r.Z,{program:[{type:"step",code:(0,i.kt)("span",null,(0,i.kt)("span",{className:"var"},"primes")," = leere Liste")},{type:"repeat",code:(0,i.kt)("span",null,"F\xfcr alle ",(0,i.kt)("span",{className:"var"},"zahl"),"en zwischen ",(0,i.kt)("u",null,"2")," und ",(0,i.kt)("u",null,"100"),":"),block:[{type:"step",code:(0,i.kt)("span",null,(0,i.kt)("span",{className:"var"},"is_prime")," = wahr")},{type:"repeat",code:(0,i.kt)("span",null,"F\xfcr alle ",(0,i.kt)("span",{className:"var"},"test_zahl"),"en zwischen ",(0,i.kt)("u",null,"2")," und ",(0,i.kt)("u",null,(0,i.kt)("span",{className:"var"},"zahl")," - 1"),":"),block:[{type:"if",code:(0,i.kt)("span",null,"Ist der ganzzahlige Rest bei der Division von ",(0,i.kt)("span",{className:"var"},"zahl")," durch ",(0,i.kt)("span",{className:"var"},"test_zahl")," gleich 0?"),block:[{type:"step",code:(0,i.kt)("span",null,"Setze ",(0,i.kt)("span",{className:"var"},"is_prime")," auf falsch.")}]}]},{type:"if",code:(0,i.kt)("span",null,"Wenn ",(0,i.kt)("span",{className:"var"},"is_prime")," ist wahr:"),block:[{type:"step",code:(0,i.kt)("span",null,"F\xfcge ",(0,i.kt)("span",{className:"var"},"zahl")," der Liste ",(0,i.kt)("span",{className:"var"},"primes")," hinzu.")}]}]},{type:"step",code:(0,i.kt)("span",null,"Gebe die Liste ",(0,i.kt)("span",{className:"var"},"primes")," aus.")}],mdxType:"Strukto"})),(0,i.kt)(y,{webKey:"5b398abd-06b7-4fc7-8e2c-bff3f6af292a",title:"L\xf6sung",mdxType:"Solution"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"primes = []\nMAX_ZAHL = 100\n\nfor zahl in range(2, MAX_ZAHL + 1):\n    is_prime = True\n    for to_test in range(2, zahl):\n        if zahl % to_test == 0:\n            is_prime = False\n    if is_prime:\n        primes.append(zahl)\nprint(f'{len(primes)} Primzahlen von 1 bis {MAX_ZAHL}', primes)\n"))),(0,i.kt)(y,{webKey:"6e42d81b-f179-41c4-9f0c-9e80dbb54034",title:"Optimierungen",mdxType:"Solution"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:'reference title="primes.py"',reference:!0,title:'"primes.py"'},"https://github.com/lebalz/ofi-blog/blob/main/docs/EF-Python/03-Python/assets/primes.py\n")))),(0,i.kt)("hr",null),(0,i.kt)("span",{style:{height:"7em",display:"block"}}),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("h2",{parentName:"div",id:"eindimensionale-listen"},"Eindimensionale Listen"),(0,i.kt)(c,{parentName:"div",type:"heading",nr:3,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Hier nochmals in der \xdcbersicht die Funktionsweise von Listen in Python."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:17,mdxType:"Comment"})),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"liste-erzeugen-"},"Liste erzeugen ",(0,i.kt)("inlineCode",{parentName:"h3"},"[]")),(0,i.kt)(c,{parentName:"div",type:"heading",nr:4,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"# Liste erzeugen und Variablen zuweisen\nnoten = [3.5, 6, 5, 4.5]\n\n# Ganze Liste anzeigen \nprint(noten)\n# Element mit Index 2 aus der Liste anzeigen\nprint(noten[2])\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"schleife-\xfcber-alle-elemente-der-liste"},"Schleife \xfcber alle Elemente der Liste"),(0,i.kt)(c,{parentName:"div",type:"heading",nr:5,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"noten = [3.5, 6, 5, 4.5]\n\nfor note in noten:\n    print(note)\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"schleife-\xfcber-listen-indices"},"Schleife \xfcber Listen-Indices"),(0,i.kt)(c,{parentName:"div",type:"heading",nr:6,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},'noten = [3.5, 6, 5, 4.5]\n\n# (beginnt bei 0 und endet mit 1 weniger als L\xe4nge der Liste)\nfor index in range(0, len(noten)):\n    print(index, ":", noten[index])\n'))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"listenelemente-\xe4ndern"},"Listenelemente \xe4ndern"),(0,i.kt)(c,{parentName:"div",type:"heading",nr:7,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"noten = [3.5, 6, 5, 4.5]\n\n# Element mit Index 3 neuen Wert zuweisen\nnoten[3] = 5.5\nprint(noten)\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"fehler-indexerror"},"Fehler: IndexError"),(0,i.kt)(c,{parentName:"div",type:"heading",nr:8,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"noten = [3.5, 6, 5, 4.5]\n\n# die Liste ist nicht so lang\nnoten[7] = 6\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"element-hinzuf\xfcgen-append"},"Element hinzuf\xfcgen ",(0,i.kt)("inlineCode",{parentName:"h3"},"append()")),(0,i.kt)(c,{parentName:"div",type:"heading",nr:9,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"noten = [3.5, 6, 5, 4.5]\n\n# Element am Ende der Liste anh\xe4ngen\nnoten.append(5)\nprint(noten)\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"element-an-bestimmter-stelle-hinzuf\xfcgen-insert"},"Element an bestimmter Stelle hinzuf\xfcgen ",(0,i.kt)("inlineCode",{parentName:"h3"},"insert()")),(0,i.kt)(c,{parentName:"div",type:"heading",nr:10,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},'noten = [3.5, 6, 5, 4.5, 5]\n# vor dem Element mit Index 3 eine "4" einf\xfcgen\nnoten.insert(3, 4)\nprint(noten)\n'))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"aufsteigend-sortieren-sort"},"Aufsteigend sortieren ",(0,i.kt)("inlineCode",{parentName:"h3"},"sort()")),(0,i.kt)(c,{parentName:"div",type:"heading",nr:11,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"noten = [3.5, 6, 5, 4, 4.5, 5]\n\nnoten.sort()\nprint(noten)\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"letztes-element-entfernen-pop"},"Letztes Element entfernen ",(0,i.kt)("inlineCode",{parentName:"h3"},"pop()")),(0,i.kt)(c,{parentName:"div",type:"heading",nr:12,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Letztes Element entfernen und zur\xfcckgeben."),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:18,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"noten = [3.5, 4, 4.5, 5, 5, 6]\n\nlast = noten.pop()\nprint(last)\nprint(noten)\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"element-bei-index-entfernen-pop0"},"Element bei Index entfernen ",(0,i.kt)("inlineCode",{parentName:"h3"},"pop(0)")),(0,i.kt)(c,{parentName:"div",type:"heading",nr:13,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"vorderstes = noten.pop(0)\nprint(vorderstes)\nprint(noten)\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"element-aus-der-liste-entfernen-remove"},"Element aus der Liste entfernen ",(0,i.kt)("inlineCode",{parentName:"h3"},"remove()")),(0,i.kt)(c,{parentName:"div",type:"heading",nr:14,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"noten = [3.5, 5, 4.5, 4, 5, 6]\n\n# 11) Erstes Element mit dem Wert 5 aus der Liste entfernen\nnoten.remove(5)\nprint(noten)\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"mittelwert-statisticsmean"},"Mittelwert ",(0,i.kt)("inlineCode",{parentName:"h3"},"statistics.mean()")),(0,i.kt)(c,{parentName:"div",type:"heading",nr:15,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"import statistics\n\nnoten =[3.5, 5, 4.5, 4, 5, 6]\n\nmittelwert = statistics.mean(noten)\nprint(mittelwert)\n")),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Weitere Funktionen"),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:19,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"\ud83d\udc49 ",(0,i.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/statistics.html"},"https://docs.python.org/3/library/statistics.html")),(0,i.kt)(c,{parentName:"div",type:"paragraph",nr:20,mdxType:"Comment"}))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"leere-liste-"},"Leere Liste ",(0,i.kt)("inlineCode",{parentName:"h3"},"[]")),(0,i.kt)(c,{parentName:"div",type:"heading",nr:16,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"# Leere Liste erstellen\nnoten = []\nprint(noten)\n"))),(0,i.kt)("admonition",{type:"def"},(0,i.kt)("div",{parentName:"admonition",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"liste-mit-text"},"Liste mit Text"),(0,i.kt)(c,{parentName:"div",type:"heading",nr:17,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"# Liste mit Strings\nnoten =['gut', 'erf\xfcllt', 'mangelhaft', 'erf\xfcllt']\nprint(noten)\n"))))}h.isMDXComponent=!0}}]);